#include <stdio.h>
#include <stdlib.h>
struct node {
    int info;
    struct node* link;
};
typedef struct node* NODE;
NODE getnode() {
    NODE x = (NODE)malloc(sizeof(struct node));
    if (x == NULL) {
        printf("OUT OF MEMORY\n");
        exit(0);
    }
    x->link = NULL;
    return x;
}
NODE insert_front(int item, NODE head) {
    NODE temp = getnode();
    temp->info = item;
    NODE first = head->link;
    head->link = temp;
    temp->link = first;
    return head;
}
NODE insert_rear(int item, NODE head) {
    NODE temp = getnode();
    temp->info = item;
    temp->link = NULL;

    NODE cur = head;
    while (cur->link != NULL) {
        cur = cur->link;
    }
    cur->link = temp;
    return head;
}

NODE delete_front(NODE head) {
    if (head->link == NULL) {
        printf("List is empty\n");
        return head;
    }

    NODE temp = head->link;
    head->link = temp->link;
    printf("Item deleted = %d\n", temp->info);
    free(temp);
    return head;
}

NODE delete_rear(NODE head) {
    NODE prev, cur;

    if (head->link == NULL) {
        printf("List is empty\n");
        return head;
    }

    prev = head;
    cur = head->link;

    while (cur->link != NULL) {
        prev = cur;
        cur = cur->link;
    }

    prev->link = NULL;
    printf("Item deleted = %d\n", cur->info);
    free(cur);
    return head;
}

NODE display(NODE head) {
    NODE cur;

    if (head->link == NULL) {
        printf("List empty\n");
        return head;
    }

    cur = head->link;
    printf("List contents: ");
    while (cur != NULL) {
        printf("%d ", cur->info);
        cur = cur->link;
    }
    printf("\n");
    return head;
}

int main() {
    NODE head = getnode();
    head->link = NULL;

    int ch, item;

    while (1) {
        printf("\n1. Insert Front\n2. Insert Rear\n3. Delete Front\n4. Delete Rear\n5. Display\n6. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &ch);

        switch (ch) {
            case 1:
                printf("Enter item to insert at front: ");
                scanf("%d", &item);
                head = insert_front(item, head);
                break;

            case 2:
                printf("Enter item to insert at rear: ");
                scanf("%d", &item);
                head = insert_rear(item, head);
                break;

            case 3:
                head = delete_front(head);
                break;

            case 4:
                head = delete_rear(head);
                break;

            case 5:
                head = display(head);
                break;

            case 6:
                exit(0);

            default:
                printf("Invalid choice. Try again.\n");
        }
    }

    return 0;
}
